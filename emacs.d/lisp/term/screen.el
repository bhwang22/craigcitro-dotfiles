;; -*- no-byte-compile: t -*-
;; Treat a screen terminal similar to an xterm.

;; (2011 Jun 29) Quick hack to get tmux+256 color working
;; "Inspired" by:
;;   http://lists.gnu.org/archive/html/emacs-devel/2009-02/msg00780.html
;; which became:
;;   http://git.savannah.gnu.org/cgit/emacs.git/tree/lisp/term/screen.el

(load "term/xterm")

(defvar screen-function-map
  (let ((map (make-sparse-keymap)))

    ;; screen from X.org 6.8.2 uses these key definitions.
    (define-key map "\eOP" [f1])
    (define-key map "\eOQ" [f2])
    (define-key map "\eOR" [f3])
    (define-key map "\eOS" [f4])
    (define-key map "\e[15~" [f5])
    (define-key map "\e[17~" [f6])
    (define-key map "\e[18~" [f7])
    (define-key map "\e[19~" [f8])
    (define-key map "\e[20~" [f9])
    (define-key map "\e[21~" [f10])
    (define-key map "\e[23~" [f11])
    (define-key map "\e[24~" [f12])

    (define-key map "\eO2P" [S-f1])
    (define-key map "\eO2Q" [S-f2])
    (define-key map "\eO2R" [S-f3])
    (define-key map "\eO2S" [S-f4])
    (define-key map "\e[1;2P" [S-f1])
    (define-key map "\e[1;2Q" [S-f2])
    (define-key map "\e[1;2R" [S-f3])
    (define-key map "\e[1;2S" [S-f4])
    (define-key map "\e[15;2~" [S-f5])
    (define-key map "\e[17;2~" [S-f6])
    (define-key map "\e[18;2~" [S-f7])
    (define-key map "\e[19;2~" [S-f8])
    (define-key map "\e[20;2~" [S-f9])
    (define-key map "\e[21;2~" [S-f10])
    (define-key map "\e[23;2~" [S-f11])
    (define-key map "\e[24;2~" [S-f12])

    (define-key map "\eO5P" [C-f1])
    (define-key map "\eO5Q" [C-f2])
    (define-key map "\eO5R" [C-f3])
    (define-key map "\eO5S" [C-f4])
    (define-key map "\e[15;5~" [C-f5])
    (define-key map "\e[17;5~" [C-f6])
    (define-key map "\e[18;5~" [C-f7])
    (define-key map "\e[19;5~" [C-f8])
    (define-key map "\e[20;5~" [C-f9])
    (define-key map "\e[21;5~" [C-f10])
    (define-key map "\e[23;5~" [C-f11])
    (define-key map "\e[24;5~" [C-f12])

    (define-key map "\eO6P" [C-S-f1])
    (define-key map "\eO6Q" [C-S-f2])
    (define-key map "\eO6R" [C-S-f3])
    (define-key map "\eO6S" [C-S-f4])
    (define-key map "\e[15;6~" [C-S-f5])
    (define-key map "\e[17;6~" [C-S-f6])
    (define-key map "\e[18;6~" [C-S-f7])
    (define-key map "\e[19;6~" [C-S-f8])
    (define-key map "\e[20;6~" [C-S-f9])
    (define-key map "\e[21;6~" [C-S-f10])
    (define-key map "\e[23;6~" [C-S-f11])
    (define-key map "\e[24;6~" [C-S-f12])

    (define-key map "\eO3P" [M-f1])
    (define-key map "\eO3Q" [M-f2])
    (define-key map "\eO3R" [M-f3])
    (define-key map "\eO3S" [M-f4])
    (define-key map "\e[15;3~" [M-f5])
    (define-key map "\e[17;3~" [M-f6])
    (define-key map "\e[18;3~" [M-f7])
    (define-key map "\e[19;3~" [M-f8])
    (define-key map "\e[20;3~" [M-f9])
    (define-key map "\e[21;3~" [M-f10])
    (define-key map "\e[23;3~" [M-f11])
    (define-key map "\e[24;3~" [M-f12])

    (define-key map "\eO4P" [M-S-f1])
    (define-key map "\eO4Q" [M-S-f2])
    (define-key map "\eO4R" [M-S-f3])
    (define-key map "\eO4S" [M-S-f4])
    (define-key map "\e[15;4~" [M-S-f5])
    (define-key map "\e[17;4~" [M-S-f6])
    (define-key map "\e[18;4~" [M-S-f7])
    (define-key map "\e[19;4~" [M-S-f8])
    (define-key map "\e[20;4~" [M-S-f9])
    (define-key map "\e[21;4~" [M-S-f10])
    (define-key map "\e[23;4~" [M-S-f11])
    (define-key map "\e[24;4~" [M-S-f12])

    (define-key map "\eOA" [up])
    (define-key map "\eOB" [down])
    (define-key map "\eOC" [right])
    (define-key map "\eOD" [left])
    (define-key map "\eOF" [end])
    (define-key map "\eOH" [home])

    (define-key map "\e[1;2A" [S-up])
    (define-key map "\e[1;2B" [S-down])
    (define-key map "\e[1;2C" [S-right])
    (define-key map "\e[1;2D" [S-left])
    (define-key map "\e[1;2F" [S-end])
    (define-key map "\e[1;2H" [S-home])

    (define-key map "\e[1;4A" [M-S-up])
    (define-key map "\e[1;4B" [M-S-down])
    (define-key map "\e[1;4C" [M-S-right])
    (define-key map "\e[1;4D" [M-S-left])
    (define-key map "\e[1;4F" [M-S-end])
    (define-key map "\e[1;4H" [M-S-home])

    (define-key map "\e[1;5A" [C-up])
    (define-key map "\e[1;5B" [C-down])
    (define-key map "\e[1;5C" [C-right])
    (define-key map "\e[1;5D" [C-left])
    (define-key map "\e[1;5F" [C-end])
    (define-key map "\e[1;5H" [C-home])

    (define-key map "\e[1;6A" [C-S-up])
    (define-key map "\e[1;6B" [C-S-down])
    (define-key map "\e[1;6C" [C-S-right])
    (define-key map "\e[1;6D" [C-S-left])
    (define-key map "\e[1;6F" [C-S-end])
    (define-key map "\e[1;6H" [C-S-home])

    (define-key map "\e[1;7A" [C-M-up])
    (define-key map "\e[1;7B" [C-M-down])
    (define-key map "\e[1;7C" [C-M-right])
    (define-key map "\e[1;7D" [C-M-left])
    (define-key map "\e[1;7F" [C-M-end])
    (define-key map "\e[1;7H" [C-M-home])

    (define-key map "\e[1;8A" [C-M-S-up])
    (define-key map "\e[1;8B" [C-M-S-down])
    (define-key map "\e[1;8C" [C-M-S-right])
    (define-key map "\e[1;8D" [C-M-S-left])
    (define-key map "\e[1;8F" [C-M-S-end])
    (define-key map "\e[1;8H" [C-M-S-home])

    (define-key map "\e[1;3A" [M-up])
    (define-key map "\e[1;3B" [M-down])
    (define-key map "\e[1;3C" [M-right])
    (define-key map "\e[1;3D" [M-left])
    (define-key map "\e[1;3F" [M-end])
    (define-key map "\e[1;3H" [M-home])

    (define-key map "\e[2~" [insert])
    (define-key map "\e[3~" [delete])
    (define-key map "\e[5~" [prior])
    (define-key map "\e[6~" [next])

    (define-key map "\e[2;2~" [S-insert])
    (define-key map "\e[3;2~" [S-delete])
    (define-key map "\e[5;2~" [S-prior])
    (define-key map "\e[6;2~" [S-next])

    (define-key map "\e[2;4~" [M-S-insert])
    (define-key map "\e[3;4~" [M-S-delete])
    (define-key map "\e[5;4~" [M-S-prior])
    (define-key map "\e[6;4~" [M-S-next])

    (define-key map "\e[2;5~" [C-insert])
    (define-key map "\e[3;5~" [C-delete])
    (define-key map "\e[5;5~" [C-prior])
    (define-key map "\e[6;5~" [C-next])

    (define-key map "\e[2;6~" [C-S-insert])
    (define-key map "\e[3;6~" [C-S-delete])
    (define-key map "\e[5;6~" [C-S-prior])
    (define-key map "\e[6;6~" [C-S-next])

    (define-key map "\e[2;7~" [C-M-insert])
    (define-key map "\e[3;7~" [C-M-delete])
    (define-key map "\e[5;7~" [C-M-prior])
    (define-key map "\e[6;7~" [C-M-next])

    (define-key map "\e[2;8~" [C-M-S-insert])
    (define-key map "\e[3;8~" [C-M-S-delete])
    (define-key map "\e[5;8~" [C-M-S-prior])
    (define-key map "\e[6;8~" [C-M-S-next])

    (define-key map "\e[2;3~" [M-insert])
    (define-key map "\e[3;3~" [M-delete])
    (define-key map "\e[5;3~" [M-prior])
    (define-key map "\e[6;3~" [M-next])

    (define-key map "\e[4~" [select])
    (define-key map "\e[29~" [print])

    (define-key map "\eOj" [kp-multiply])
    (define-key map "\eOk" [kp-add])
    (define-key map "\eOl" [kp-separator])
    (define-key map "\eOm" [kp-subtract])
    (define-key map "\eOo" [kp-divide])
    (define-key map "\eOp" [kp-0])
    (define-key map "\eOq" [kp-1])
    (define-key map "\eOr" [kp-2])
    (define-key map "\eOs" [kp-3])
    (define-key map "\eOt" [kp-4])
    (define-key map "\eOu" [kp-5])
    (define-key map "\eOv" [kp-6])
    (define-key map "\eOw" [kp-7])
    (define-key map "\eOx" [kp-8])
    (define-key map "\eOy" [kp-9])

    ;; These keys are available in screen starting from version 216
    ;; if the modifyOtherKeys resource is set to 1.

    (define-key map "\e[27;5;9~"   [C-tab])
    (define-key map "\e[27;5;13~"  [C-return])
    (define-key map "\e[27;5;39~"  [?\C-\'])
    (define-key map "\e[27;5;44~"  [?\C-,])
    (define-key map "\e[27;5;45~"  [?\C--])
    (define-key map "\e[27;5;46~"  [?\C-.])
    (define-key map "\e[27;5;47~"  [?\C-/])
    (define-key map "\e[27;5;48~"  [?\C-0])
    (define-key map "\e[27;5;49~"  [?\C-1])
    ;; Not all C-DIGIT keys have a distinct binding.
    (define-key map "\e[27;5;57~"  [?\C-9])
    (define-key map "\e[27;5;59~"  [?\C-\;])
    (define-key map "\e[27;5;61~"  [?\C-=])
    (define-key map "\e[27;5;92~"  [?\C-\\])

    (define-key map "\e[27;6;33~"  [?\C-!])
    (define-key map "\e[27;6;34~"  [?\C-\"])
    (define-key map "\e[27;6;35~"  [?\C-#])
    (define-key map "\e[27;6;36~"  [?\C-$])
    (define-key map "\e[27;6;37~"  [?\C-%])
    (define-key map "\e[27;6;38~"  [?\C-&])
    (define-key map "\e[27;6;40~"  [?\C-(])
    (define-key map "\e[27;6;41~"  [?\C-)])
    (define-key map "\e[27;6;42~"  [?\C-*])
    (define-key map "\e[27;6;43~"  [?\C-+])
    (define-key map "\e[27;6;58~"  [?\C-:])
    (define-key map "\e[27;6;60~"  [?\C-<])
    (define-key map "\e[27;6;62~"  [?\C->])
    (define-key map "\e[27;6;63~"  [(control ??)])

    ;; These are the strings emitted for various C-M- combinations
    ;; for keyboards that the Meta and Alt modifiers are on the same
    ;; key (usually labeled "Alt").
    (define-key map "\e[27;13;9~"  [C-M-tab])
    (define-key map "\e[27;13;13~" [C-M-return])

    (define-key map "\e[27;13;39~" [?\C-\M-\'])
    (define-key map "\e[27;13;44~" [?\C-\M-,])
    (define-key map "\e[27;13;45~" [?\C-\M--])
    (define-key map "\e[27;13;46~" [?\C-\M-.])
    (define-key map "\e[27;13;47~" [?\C-\M-/])
    (define-key map "\e[27;13;48~" [?\C-\M-0])
    (define-key map "\e[27;13;49~" [?\C-\M-1])
    (define-key map "\e[27;13;50~" [?\C-\M-2])
    (define-key map "\e[27;13;51~" [?\C-\M-3])
    (define-key map "\e[27;13;52~" [?\C-\M-4])
    (define-key map "\e[27;13;53~" [?\C-\M-5])
    (define-key map "\e[27;13;54~" [?\C-\M-6])
    (define-key map "\e[27;13;55~" [?\C-\M-7])
    (define-key map "\e[27;13;56~" [?\C-\M-8])
    (define-key map "\e[27;13;57~" [?\C-\M-9])
    (define-key map "\e[27;13;59~" [?\C-\M-\;])
    (define-key map "\e[27;13;61~" [?\C-\M-=])
    (define-key map "\e[27;13;92~" [?\C-\M-\\])

    (define-key map "\e[27;14;33~"  [?\C-\M-!])
    (define-key map "\e[27;14;34~"  [?\C-\M-\"])
    (define-key map "\e[27;14;35~"  [?\C-\M-#])
    (define-key map "\e[27;14;36~"  [?\C-\M-$])
    (define-key map "\e[27;14;37~"  [?\C-\M-%])
    (define-key map "\e[27;14;38~"  [?\C-\M-&])
    (define-key map "\e[27;14;40~"  [?\C-\M-\(])
    (define-key map "\e[27;14;41~"  [?\C-\M-\)])
    (define-key map "\e[27;14;42~"  [?\C-\M-*])
    (define-key map "\e[27;14;43~"  [?\C-\M-+])
    (define-key map "\e[27;14;58~"  [?\C-\M-:])
    (define-key map "\e[27;14;60~"  [?\C-\M-<])
    (define-key map "\e[27;14;62~"  [?\C-\M->])
    (define-key map "\e[27;14;63~"  [(control meta ??)])

    (define-key map "\e[27;7;9~"  [C-M-tab])
    (define-key map "\e[27;7;13~" [C-M-return])

    (define-key map "\e[27;7;32~" [?\C-\M-\s])
    (define-key map "\e[27;7;39~" [?\C-\M-\'])
    (define-key map "\e[27;7;44~" [?\C-\M-,])
    (define-key map "\e[27;7;45~" [?\C-\M--])
    (define-key map "\e[27;7;46~" [?\C-\M-.])
    (define-key map "\e[27;7;47~" [?\C-\M-/])
    (define-key map "\e[27;7;48~" [?\C-\M-0])
    (define-key map "\e[27;7;49~" [?\C-\M-1])
    (define-key map "\e[27;7;50~" [?\C-\M-2])
    (define-key map "\e[27;7;51~" [?\C-\M-3])
    (define-key map "\e[27;7;52~" [?\C-\M-4])
    (define-key map "\e[27;7;53~" [?\C-\M-5])
    (define-key map "\e[27;7;54~" [?\C-\M-6])
    (define-key map "\e[27;7;55~" [?\C-\M-7])
    (define-key map "\e[27;7;56~" [?\C-\M-8])
    (define-key map "\e[27;7;57~" [?\C-\M-9])
    (define-key map "\e[27;7;59~" [?\C-\M-\;])
    (define-key map "\e[27;7;61~" [?\C-\M-=])
    (define-key map "\e[27;7;92~" [?\C-\M-\\])

    (define-key map "\e[27;8;33~"  [?\C-\M-!])
    (define-key map "\e[27;8;34~"  [?\C-\M-\"])
    (define-key map "\e[27;8;35~"  [?\C-\M-#])
    (define-key map "\e[27;8;36~"  [?\C-\M-$])
    (define-key map "\e[27;8;37~"  [?\C-\M-%])
    (define-key map "\e[27;8;38~"  [?\C-\M-&])
    (define-key map "\e[27;8;40~"  [?\C-\M-\(])
    (define-key map "\e[27;8;41~"  [?\C-\M-\)])
    (define-key map "\e[27;8;42~"  [?\C-\M-*])
    (define-key map "\e[27;8;43~"  [?\C-\M-+])
    (define-key map "\e[27;8;58~"  [?\C-\M-:])
    (define-key map "\e[27;8;60~"  [?\C-\M-<])
    (define-key map "\e[27;8;62~"  [?\C-\M->])
    (define-key map "\e[27;8;63~"  [(control meta ??)])

    (define-key map "\e[27;2;9~"   [S-tab])
    (define-key map "\e[27;2;13~"  [S-return])

    (define-key map "\e[27;6;9~"   [C-S-tab])
    (define-key map "\e[27;6;13~"  [C-S-return])

    ;; Other versions of screen might emit these.
    (define-key map "\e[A" [up])
    (define-key map "\e[B" [down])
    (define-key map "\e[C" [right])
    (define-key map "\e[D" [left])
    (define-key map "\e[1~" [home])

    (define-key map "\eO2A" [S-up])
    (define-key map "\eO2B" [S-down])
    (define-key map "\eO2C" [S-right])
    (define-key map "\eO2D" [S-left])
    (define-key map "\eO2F" [S-end])
    (define-key map "\eO2H" [S-home])

    (define-key map "\eO5A" [C-up])
    (define-key map "\eO5B" [C-down])
    (define-key map "\eO5C" [C-right])
    (define-key map "\eO5D" [C-left])
    (define-key map "\eO5F" [C-end])
    (define-key map "\eO5H" [C-home])

    (define-key map "\e[11~" [f1])
    (define-key map "\e[12~" [f2])
    (define-key map "\e[13~" [f3])
    (define-key map "\e[14~" [f4])
    map)
  "Function key map overrides for screen.")

(defun terminal-init-screen ()
  "Terminal initialization function for screen."
  ;; Use the xterm color initialization code.
  (message "running this code")

  (let ((map (copy-keymap screen-function-map)))
    (set-keymap-parent map (keymap-parent input-decode-map))
    (set-keymap-parent input-decode-map map))
  (xterm-register-default-colors)
  (tty-set-up-initial-frame-faces))

;; screen.el ends here
