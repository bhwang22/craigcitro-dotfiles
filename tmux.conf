# .tmuxrc
# Configuration for tmux
#

################################################################################
# general bindings

# First, the better prefix key
# (2011 Oct 16) Trying out ^Y for a prefix key ...
unbind C-b
set -g prefix ^Y
bind y send-prefix

# Go go gadget colors
set -g default-terminal "screen-256color"

# Screen-style last-window command
unbind C-y
bind C-y last-window

# I like o and C-o to have the same behavior
unbind C-o
bind C-o select-pane -t :.+

# big big history
set-option -g history-limit 5000

# kill the bell
set-option bell-action none

# split vertically
unbind |
bind | split-window -h

# (2011 Mar 20) so hot
bind C-h split-window 'man tmux'

# (2011 Mar 20) for those of us that spastically edit
bind C-r source-file ~/.tmux.conf

# editing mode
# no delete-word yet: this is better than nothing ...
bind -t emacs-edit M-Bspace delete
bind -t emacs-edit C-g cancel

# (2011 Mar 19) kill a few weird default bindings.
unbind C-z # WTF, suspend client?
# I've only ever hit these by accident:
unbind M-Up
unbind M-Down
unbind M-Left
unbind M-Right
unbind C-Up
unbind C-Down
unbind C-Left
unbind C-Right
unbind D
unbind {
unbind }
unbind -

################################################################################
# window and pane management

# (2011 Mar 20) Seems nice:
bind C-Left swap-pane -d -U
bind C-Right swap-pane -d -D
bind C-Up rotate-window -D
bind C-Down display-panes
bind C-q confirm-before kill-pane

# (2011 Mar 19) constant-time access to panes. numbered funny because
# the keyboard is 1-based, but pane numbering is 0-based.
# Unfortunately, there aren't keystrokes corresponding to C-numbers,
# so I had to reorganize a little to get this working. Also, given
# that the only layout I use is even-horizontal, no need to take up
# some prime keybindings with other ones.
unbind M-1
unbind M-2
unbind M-3
unbind M-4
unbind M-5
unbind 0
unbind 1
unbind 2
unbind 3
unbind 4
unbind 5
unbind 6
unbind 7
unbind 8
unbind 9
bind M-0 select-window -t :0
bind M-1 select-window -t :1
bind M-2 select-window -t :2
bind M-3 select-window -t :3
bind M-4 select-window -t :4
bind M-5 select-window -t :5
bind M-6 select-window -t :6
bind M-7 select-window -t :7
bind M-8 select-window -t :8
bind M-9 select-window -t :9
# I've never used more than three panes ...
bind 1 select-pane -t 0
bind 2 select-pane -t 1
bind 3 select-pane -t 2
bind 4 select-pane -t 3
bind 5 select-pane -t 4

# (2011 Mar 24) Why have other layouts?
unbind Space
bind Space select-layout -t: even-horizontal
bind 0 next-layout

# (2011 Mar 13) binding for setting default dir. this matches up with
# code at the bottom of my .bashrc.
bind C-m confirm-before "send-keys t m u x - m a r k - d e f a u l t - p a t h ^M"

# (2011 Aug 15) Apparently something changed related to environment variables
# recently ... need to unset the variable I use for tracking when a new
# shell is opened:
set-environment -g -u CC_BASHRC_INITIALIZED

################################################################################
# copy-paste

# temporary nonsense for copy-paste. First, I had all four of these lines:
#   bind C-q save-buffer /home/craigcitro/.tmux.paste-buffer
#   bind C-j run-shell "xclip -selection c -d :0 /home/craigcitro/.tmux.paste-buffer"
#   bind C-k run-shell "xclip -selection c -d :0 -o >/home/craigcitro/.tmux.paste-buffer"
#   bind C-x load-buffer /home/craigcitro/.tmux.paste-buffer
# but then I realized that the right way to script in tmux is to
# create a shell command any way you'd like, using tmux to pass
# through commands. So now the new commands are
bind C-c run-shell "tmux-buffer-to-clipboard"
bind C-v run-shell "tmux-clipboard-to-buffer"
# bind C-j run-shell "tmux-buffer-to-clipboard"
# bind C-k run-shell "tmux-clipboard-to-buffer"
# bind j run-shell "tmux-buffer-to-clipboard"
# bind k run-shell "tmux-clipboard-to-buffer"
# TODO: when I'm feeling classy, I'll do three things:
#  * pass through commands for *which* buffer I want,
#  * possibly make that match parts of the emacs kill-ring, and
#  * add a hook into tmux so that I don't need to do this manually for
#    the trivial case (i.e. whenever I copy, it goes to the system
#    clipboard).

# Also, I hate needing to let go of control in many cases; for copy,
# there's no good way to deal with this because ^[ is the same key as 
# ESC. However, for paste, it's no problem. TODO: fix this for copy.
# bind C-[ copy-mode
bind C-] paste-buffer -s \015

# ahh, the glory: I can configure keys in copy-mode. HOT.
bind -t emacs-copy C-z scroll-down
bind -t emacs-copy M-z scroll-up

# (2011 May 13) I don't know why, but ESC has funny behavior in copy
# mode (eats an extra keystroke). Turn this off until I fix it.
unbind -t emacs-copy Escape

################################################################################
# status bar related

# (2010 Oct 26) I like a wider status message.
set-option -g status-left-length 20

# (2010 Nov 04) I like lots of information ... but this isn't quite right.
#
# (2010 Nov 08) There's a serious problem with this approach: since
# tmux uses the global env to execute the command here, there seems to
# be no way to get client-specific information to use in the script.
# So this script does what I want (though could be more configurable),
# but it's useless because it can't see the bindings it needs to
# operate.
#
# Ah, so I got it working by hacking tmux a bit, but it's a patch I
# suspect I can get upstreamed. In particular, I just gave tmux the
# ability to do the same status-left expansion in the #(...) string.
#
# set-option status-left "\#(tmux-group-list)"
set-option status-left "[#S]"
set-option status-left-bg green
set-option status-left-fg black

# (2010 Nov 11) I'm also interested to try out the configuration
# options for the middle of the status bar. Here's my first minor
# test, which might be too subtle:
# set-window-option -g window-status-current-bg colour46
# this is another pretty good choice:
set-window-option -g window-status-current-bg colour47

# (2010 Nov 19) Do I really ever look at the hostname? Maybe I
# should have the status color be related to the machine I'm
# on ...
set-option -g status-right "%X %a %x"
